<?php
echo 'Задание 1 <br />';// Задание 1
function cube($a) {
    return $a*$a*$a;
}

echo cube (5);
echo '<br />';
echo 'Задание 2 <br />';
// Задание 2

function sum($a, $b) {
    return $a + $b;
}

echo sum(5, 10);

echo '<br />';
echo 'Задание 3 <br />';
// Задание 3

function day_not($a) {

    switch ($a) {
        case 1:
            echo 'понедельник';
            break;
        case 2:
            echo 'вторник';
            break;
        case 3:
            echo 'среда';
            break;
        case 4:
            echo 'четверг';
            break;
        case 5:
            echo 'пятница';
            break;
        case 6:
            echo 'суббота';
            break;
        case 7:
            echo 'воскресенье';
            break;
    }
}

day_not(5);

echo '<br />';
echo 'Задание 4 <br />';
// Задание 4

function otr($a) {
    return $a < 0;
}

var_dump(otr(5));

echo '<br />';
echo 'Задание 5 <br />';
// Задание 5

function getDigitsSum($num)
{
    $digits = str_split($num); //str_split преобразует строку в массив
    return array_sum($digits); //array_sum вычисляет сумму строк массива
}

echo getDigitsSum(22444);

echo '<br />';
echo 'Задание 6 <br />';
// Задание 6

$year13 = [];
for ($i = 1; $i <= 2020; $i++) {
    if (getDigitsSum($i) == 13) {
        $year13[] = $i;
    }
}

var_dump($year13);

echo '<br />';
echo 'Задание 7 <br />';
// Задание 7

function isEven($num)
{
    return $num % 2 == 0;
}

var_dump(isEven(7));

echo '<br />';
echo 'Задание 8 <br />';
// Задание 8

function translit($text) {
    $ishod = $text;
    $res = '';
    $n = mb_strlen($text);  // mb_strlen получаем длину строки
    $text = preg_split('//u', $text, -1, PREG_SPLIT_NO_EMPTY); // preg_split разбиваем строку по регулярному выражению
    // PREG_SPLIT_NO_EMPTY вернёт только непустые подстроки '//u' Разбивает юникод символы в ячейки ??
    $arr= array('а' 	=> 'a',
        'б'		=> 'b',
        'в'		=> 'v',
        'г'		=> 'g',
        'д'		=> 'd',
        'е'		=> 'e',
        'ё'		=> 'jo',
        'ж'		=> 'zh',
        'з'		=> 'z',
        'и'		=> 'i',
        'й'		=> 'j',
        'к'		=> 'k',
        'л'		=> 'l',
        'м'		=> 'm',
        'н'		=> 'n',
        'о'		=> 'o',
        'п'		=> 'p',
        'р'		=> 'r',
        'с'		=> 's',
        'т'		=> 't',
        'у'		=> 'u',
        'ф'		=> 'f',
        'х'		=> 'h',
        'ц'		=> 'cz',
        'ч'		=> 'ch',
        'ш'		=> 'sh',
        'щ'		=> 'shh',
        'ь'		=> '`',
        'ы'		=> 'y',
        'ъ'		=> '``',
        'э'		=> 'e',
        'ю'		=> 'yu',
        'я'		=> 'ya',
        ' '		=> ' ',
        'А' 	=> 'A',
        'Б'		=> 'B',
        'В'		=> 'V',
        'Г'		=> 'G',
        'Д'		=> 'D',
        'Е'		=> 'E',
        'Ё'		=> 'JO',
        'Ж'		=> 'ZH',
        'З'		=> 'Z',
        'И'		=> 'I',
        'Й'		=> 'J',
        'К'		=> 'K',
        'Л'		=> 'L',
        'М'		=> 'M',
        'Н'		=> 'N',
        'О'		=> 'O',
        'П'		=> 'P',
        'Р'		=> 'R',
        'С'		=> 'S',
        'Т'		=> 'T',
        'У'		=> 'U',
        'Ф'		=> 'F',
        'Х'		=> 'H',
        'Ц'		=> 'CZ',
        'Ч'		=> 'CH',
        'Ш'		=> 'SH',
        'Щ'		=> 'SHH',
        'Ь'		=> '`',
        'Ы'		=> 'Y',
        'Ъ'		=> '``',
        'Э'		=> 'E',
        'Ю'		=> 'YU',
        'Я'		=> 'YA',
        ','		=> ',',
        '.'		=> '.',
        '!'		=> '!',
        '?'		=> '?');
    for($i = 0; $i < $n; ++$i) {
        $res .= $arr[$text[$i]];
    }
    return $ishod.'<br/>'.$res;
}
$text = 'Привет Мир!!!';
echo translit($text);

echo '<br />';
echo 'Задание 9 <br />';
// Задание 9
/* Сделайте функцию, которая возвращает множественное или единственное
число существительного. Пример: 1 яблоко, 2 (3, 4) яблока, 5 яблок. Функция
первым параметром принимает число, а следующие 3 параметра — форма
для единственного числа, для чисел два, три, четыре и для чисел, больших
четырех, например, func(3, 'яблоко', 'яблока', 'яблок'). */

function num123($num, $str1, $str2, $str3) {
    if ($num == 1) {
        return $num . ' ' . $str1;
    }
    if ($num >= 2 and $num <= 4) {
        return $num . ' ' . $str2;
    }
    if ($num >= 5) {
        return $num . ' ' . $str3;
    }
    return 'False';
}

echo num123(3, 'яблоко', 'яблока', 'яблок');

echo '<br />';
echo 'Задание 10 <br />';
// Задание 10

/*Дан массив с числами. Выведите последовательно его элементы
используя рекурсию и не используя цикл.*/

function arrayNum($arr)
{
    echo array_shift($arr) . '<br>';
    if (!empty($arr)){
        arrayNum($arr);
    } else {
        return;
    }
}


arrayNum([1, 2, 3, 4, 5, 123]);
echo '<br />';
echo 'Задание 11 <br />';
// Задание 11
/*Дано число. Сложите его цифры. Если сумма получилась более 9-ти,
опять сложите его цифры. И так, пока сумма не станет однозначным числом
(9 и менее).*/

function sumDig($num) {
    $num = array_sum(str_split($num)); // Преобразуем строку в массив и вычисляем сумму
       if ($num > 9) {
        sumDig($num);
            } else {
        return $num;
            }
}

echo '<br />';
echo 'Задание 12 <br />';
// Задание 12
/*Рассчитать скорость движения машины и выведите её в удобочитаемом
виде. Осуществить возможность вывода в км/ч, м/c. Представить решение
задачи с помощью одной функции.*/


function speed($s, $t, $val){
    $speed[1] = $s / $t . " км/ч";
    $speed[2] = $speed[1] / 3.6 . " м/с";
    return $speed[$val];
}

echo speed(100,2, 1);

echo '<br />';
echo 'Задание 13 <br />';
// Задание 13
/*Даны 2 слова, определить можно ли из 1ого слова составить 2ое, при
условии что каждую букву из строки 1 можно использовать только один раз.*/

/*
 14. Палиндромом называют последовательность символов, которая читается
как слева направо, так и справа налево. Напишите функцию по определению
палиндрома по переданному параметру.
15. Создание функцию создания таблицы умножения в HTML-документе в
виде таблицы с использованием соотв. тегов.
16. Дана строка с текстом. Напишите функцию определения самого длинного
слова.
17. Напишите функцию определения суммарного количества единиц в числах
от 1 до 100.
18. Напишите функцию, которая разбивает длинную строку тегами <br> так,
чтобы длина каждой подстроки была не более N символов. Новая подстрока
не должна начинаться с пробела.*/